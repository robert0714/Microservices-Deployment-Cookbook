<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.packt.microservices</groupId>
	<artifactId>geolocation-springboot</artifactId>
	<version>IISI-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.7.RELEASE</version>
	</parent>

	<properties>
		<start-class>com.packt.microservices.geolocation.GeoLocationApplication</start-class>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- For Docker hub leave empty; use "localhost:5000/" for a local Docker 
			Registry -->
		<docker.registry.name>localhost:5000/</docker.registry.name>
		<docker.repository.name>${docker.registry.name}robert0714/${project.artifactId}</docker.repository.name>
		<!-- <docker.host.address>192.168.99.100</docker.host.address> -->
		<docker.host.address>10.100.97.201</docker.host.address>
		<docker.port>8080</docker.port>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.13.9</version>
				<configuration>
					<images>
						<image>
							<name>${docker.repository.name}:${project.version}</name>
							<alias>${project.artifactId}</alias>

							<build>
								<from>java:8-jre</from>
								<maintainer>sourabhh</maintainer>
								<assembly>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>${docker.port}</port>
								</ports>
								<cmd>
									<shell>java -Dspring.profiles.active="docker" -jar \
										/maven/${project.build.finalName}.jar server \
										/maven/docker-config.yml</shell>
								</cmd>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<ports>
									<port>${docker.port}:8080</port>
								</ports>
<!-- 								${user.home}/logs 如果不存在，會造成mvn docker:start 無法執行docker run -->
								<volumes>
									<bind>
										<volume>${user.home}/logs:/logs</volume>
									</bind>
								</volumes>
								<wait>
									<url>http://${docker.host.address}:${docker.port}/v1/restaurants/1</url>
									<time>500000</time>
								</wait>
								<log>
									<prefix>${project.artifactId}</prefix>
									<color>cyan</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId> 
				<configuration>
					<phase>integration-test</phase>
					<groups>com.packt.microservices.geolocation.resources.docker.DockerIntegrationTest</groups>
					<systemPropertyVariables>
						<service.url>http://${docker.host.address}:${docker.port}/</service.url>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<!-- <goal>verify</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
                    <excludedGroups>com.packt.microservices.geolocation.resources.docker.DockerIntegrationTest</excludedGroups>
                </configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		 <dependency>
            <!-- Testing starter -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
	</dependencies>
</project>